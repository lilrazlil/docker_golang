map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 8000;
    server_name 172.16.238.2;
#    return 301 https://$server_name$request_uri;  # enforce https
#}

#server {
#    listen 443 ssl http2;
#    server_name example.com;
#    server_name_in_redirect off;

    #ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
    #ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
    #ssl_session_timeout 24h;
    ##ssl_session_cache shared:SSL:50m;
    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    #ssl_ciphers kEECDH+AES128:kEECDH:kEDH:-3DES:kRSA+AES128:kEDH+3DES:DES-CBC3-SHA:!RC4:!aNULL:!eNULL:!MD5:!EXPORT:!LOW:!SEED:!CAMELLIA:!IDEA:!PSK:!SRP:!SSLv2;
    #ssl_prefer_server_ciphers on;

    #add_header Strict-Transport-Security "max-age=31536000";
    #add_header X-Frame-Options "DENY";

    #access_log off;
    #access_log /var/log/nginx/example/access.log combined;
    #error_log /var/log/nginx/example/error.log warn;

    #root /var/www/example/public_html/;
    #index index.html;

    #error_page 403 =200 /index.html;
    #error_page 404 =200 /index.html;
    #error_page 500 =200 /index.html;

    location / {
        proxy_pass http://api:8081;
        proxy_http_version 1.1;
        proxy_buffer_size 4k;
        proxy_buffers 32 4k;
        proxy_max_temp_file_size 0;
        proxy_set_header Upgrade $http_upgrade; # allow websockets
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header X-Forwarded-For $remote_addr; # preserve client IP
        # kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }
}